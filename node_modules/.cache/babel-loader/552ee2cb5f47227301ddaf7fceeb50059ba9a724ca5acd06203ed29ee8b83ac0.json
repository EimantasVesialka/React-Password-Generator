{"ast":null,"code":"var _jsxFileName = \"/Users/eimantas/Desktop/password-generator/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSyncAlt, faCopy, faUnlockAlt, faLock, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Switch from 'react-switch';\nimport tippy from 'tippy.js';\nimport axios from 'axios';\nimport './tailwind.css';\nimport 'tippy.js/dist/tippy.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-toggle/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction generatePassword(length, useCapitalLetters, useDigits, useSymbols, wordSeparator) {\n  const uppercaseLetters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  const lowercaseLetters = 'abcdefghijklmnopqrstuvwxyz';\n  const numbers = '0123456789';\n  const symbols = '!@#$%^&*()_+<>?';\n  let characterSet = lowercaseLetters;\n  if (useCapitalLetters) {\n    characterSet += uppercaseLetters;\n  }\n  if (useDigits) {\n    characterSet += numbers;\n  }\n  if (useSymbols) {\n    characterSet += symbols;\n  }\n  let generatedPassword = '';\n\n  // Randomly select characters from the combined character set\n  for (let i = 0; i < length; i++) {\n    const randomIndex = Math.floor(Math.random() * characterSet.length);\n    generatedPassword += characterSet[randomIndex];\n  }\n  return generatedPassword;\n}\nfunction App() {\n  _s();\n  const [password, setPassword] = useState('');\n  const [strength, setStrength] = useState('Weak password');\n  const generateButtonRef = useRef(null);\n  const copyButtonRef = useRef(null);\n  const [length, setLength] = useState(12);\n  const [useCapitalLetters, setUseCapitalLetters] = useState(false);\n  const [useDigits, setUseDigits] = useState(false);\n  const [useSymbols, setUseSymbols] = useState(false);\n  const [passwordType, setPasswordType] = useState('characters');\n  const [wordSeparator, setWordSeparator] = useState('-');\n  const handleSeparatorChange = event => {\n    setWordSeparator(event.target.value);\n  };\n  const handleCapitalLettersChange = checked => {\n    setUseCapitalLetters(checked);\n  };\n  const handleDigitsChange = checked => {\n    setUseDigits(checked);\n  };\n  const handleSymbolsChange = checked => {\n    setUseSymbols(checked);\n  };\n  useEffect(() => {\n    if (passwordType === 'characters') {\n      if (length > 60) {\n        setLength(60);\n        generatePassword(60, useCapitalLetters, useDigits, useSymbols, wordSeparator);\n      }\n    } else if (passwordType === 'words') {\n      if (length > 10) {\n        setLength(10);\n        generatePassword(10, useCapitalLetters, useDigits, useSymbols, wordSeparator);\n      }\n    }\n  }, [passwordType, length, useCapitalLetters, useDigits, useSymbols, wordSeparator]);\n  useEffect(() => {\n    if (generateButtonRef.current) {\n      tippy(generateButtonRef.current, {\n        content: 'Generate password'\n      });\n    }\n    if (copyButtonRef.current) {\n      tippy(copyButtonRef.current, {\n        content: 'Copy password'\n      });\n    }\n  }, []);\n  useEffect(() => {\n    // Generate initial password when page loads for the first time\n    generateRandomPassword();\n    // eslint-disable-next-line\n  }, []);\n  useEffect(() => {\n    // Regenerate password whenever any of the options changes\n    generateRandomPassword();\n    // eslint-disable-next-line\n  }, [passwordType, length, useCapitalLetters, useDigits, useSymbols, wordSeparator]);\n  function handleGeneratePasswordClick() {\n    generateRandomPassword();\n  }\n  function copyPassword() {\n    if (navigator.clipboard) {\n      navigator.clipboard.writeText(password);\n      toast.success('Password copied!', {\n        position: toast.POSITION.BOTTOM_RIGHT,\n        closeOnClick: true,\n        autoClose: 2000\n      });\n    }\n  }\n  const generateRandomPassword = () => {\n    let generatedPassword = '';\n    let passwordStrength = '';\n    if (passwordType === 'characters') {\n      generatedPassword = generatePassword(length, useCapitalLetters, useDigits, useSymbols, wordSeparator);\n      passwordStrength = getPasswordStrength(generatedPassword);\n      setPassword(generatedPassword);\n      setStrength(passwordStrength);\n    } else if (passwordType === 'words') {\n      // Pull random english words using axios\n      axios.get('https://raw.githubusercontent.com/first20hours/google-10000-english/master/google-10000-english.txt').then(response => {\n        const wordPool = response.data.split('\\n').map(word => word.trim());\n        for (let i = 0; i < length; i++) {\n          const randomIndex = Math.floor(Math.random() * wordPool.length);\n          let word = wordPool[randomIndex];\n          const isFirstWord = i === 0;\n          const isLastWord = i === length - 1;\n          if (useCapitalLetters && !isFirstWord && !isLastWord) {\n            const randomCase = Math.random() < 0.5 ? 'lower' : 'upper';\n            const capitalizedWord = randomCase === 'lower' ? word.charAt(0).toLowerCase() + word.slice(1) : word.charAt(0).toUpperCase() + word.slice(1);\n            word = capitalizedWord;\n          }\n          if (useSymbols) {\n            word = word.replace(/a/gi, '4');\n            word = word.replace(/e/gi, '3');\n            word = word.replace(/l/gi, '1');\n            word = word.replace(/o/gi, '0');\n            word = word.replace(/s/gi, '5');\n            word = word.replace(/t/gi, '7');\n          }\n          generatedPassword += word;\n          if (!isLastWord) {\n            generatedPassword += wordSeparator;\n          }\n        }\n        passwordStrength = getPasswordStrength(generatedPassword);\n        setPassword(generatedPassword);\n        setStrength(passwordStrength);\n      });\n    }\n  };\n  function getPasswordStrength(password) {\n    const hasLowercase = /[a-z]/.test(password);\n    const hasUppercase = /[A-Z]/.test(password);\n    const hasNumber = /[0-9]/.test(password);\n    const hasSymbol = /[^A-Za-z0-9]/.test(password);\n    const length = password.length;\n\n    // Count how many types of characters are present\n    const typesCount = [hasLowercase, hasUppercase, hasNumber, hasSymbol].filter(Boolean).length;\n\n    // Strong password if: 4 types of characters and length >= 8, or 3 types with length > 12, or 2 types with length > 20 or any type with length > 50\n    if (typesCount === 4 && length >= 8 || typesCount >= 3 && length > 12 || typesCount >= 2 && length > 20 || length > 50) {\n      return 'Strong password';\n    }\n\n    // Moderate password if: 3 types of characters and length >= 8, or 2 types and length >= 12, or any type with length > 12\n    if (typesCount === 3 && length >= 8 || typesCount === 2 && length >= 12 || length > 12) {\n      return 'Moderate password';\n    }\n\n    // Weak password if: all other passwords\n    return 'Weak password';\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Password generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-password\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `password-strength ${strength === 'Weak password' ? 'red' : strength === 'Strong password' ? 'green' : 'orange'}`,\n      children: [strength === 'Weak password' ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faUnlockAlt,\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 37\n      }, this) : strength === 'Strong password' ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faLock,\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 128\n      }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCheckCircle,\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 180\n      }, this), strength]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generate-button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          ref: generateButtonRef,\n          onClick: handleGeneratePasswordClick,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faSyncAlt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"copy-button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          ref: copyButtonRef,\n          onClick: copyPassword,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCopy\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"charactersRadio\",\n            value: \"characters\",\n            checked: passwordType === 'characters',\n            onChange: e => setPasswordType(e.target.value),\n            className: \"hidden\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"charactersRadio\",\n            className: `bg-gray-200 rounded-full px-4 py-2 mr-2 cursor-pointer ${passwordType === 'characters' ? 'bg-blue-500 text-white' : ''}`,\n            children: \"Characters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"wordsRadio\",\n            value: \"words\",\n            checked: passwordType === 'words',\n            onChange: e => setPasswordType(e.target.value),\n            className: \"hidden\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"wordsRadio\",\n            className: `bg-gray-200 rounded-full px-4 py-2 cursor-pointer ${passwordType === 'words' ? 'bg-blue-500 text-white' : ''}`,\n            children: \"Words\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 7\n      }, this), passwordType === 'characters' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Length\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slider\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"8\",\n            max: \"60\",\n            step: \"1\",\n            value: length,\n            onChange: event => {\n              const newLength = parseInt(event.target.value);\n              setLength(newLength);\n              generatePassword(newLength, useCapitalLetters, useDigits, useSymbols, wordSeparator);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"selected-length\",\n            children: length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), passwordType === 'words' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Words\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slider\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"3\",\n            max: \"10\",\n            step: \"1\",\n            value: length,\n            onChange: event => {\n              const newLength = parseInt(event.target.value);\n              setLength(newLength);\n              generatePassword(newLength, useCapitalLetters, useDigits, useSymbols, wordSeparator);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"selected-length\",\n            children: length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), passwordType === 'characters' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Use capital letters (A-Z)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: useCapitalLetters,\n            onChange: handleCapitalLettersChange,\n            boxShadow: \"0px 1px 5px rgba(0, 0, 0, 0.6)\",\n            activeBoxShadow: \"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\",\n            height: 20,\n            width: 48\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 7\n      }, this), passwordType === 'words' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Separate words with\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: wordSeparator,\n            onChange: handleSeparatorChange,\n            className: \"dropdown-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"_\",\n              children: \"Underscore\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"-\",\n              children: \"Hyphen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \" \",\n              children: \"Space\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \",\",\n              children: \"Comma\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \".\",\n              children: \"Period\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 7\n      }, this), passwordType === 'characters' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Use digits (0-9)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: useDigits,\n            onChange: handleDigitsChange,\n            boxShadow: \"0px 1px 5px rgba(0, 0, 0, 0.6)\",\n            activeBoxShadow: \"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\",\n            height: 20,\n            width: 48\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 7\n      }, this), passwordType === 'words' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Use capital letters (A-Z)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: useCapitalLetters,\n            onChange: handleCapitalLettersChange,\n            boxShadow: \"0px 1px 5px rgba(0, 0, 0, 0.6)\",\n            activeBoxShadow: \"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\",\n            height: 20,\n            width: 48\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 7\n      }, this), passwordType === 'characters' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Use symbols (@!$%&*)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: useSymbols,\n            onChange: handleSymbolsChange,\n            boxShadow: \"0px 1px 5px rgba(0, 0, 0, 0.6)\",\n            activeBoxShadow: \"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\",\n            height: 20,\n            width: 48\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 7\n      }, this), passwordType === 'words' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Use digits (e.g. replace A with 4)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: useSymbols,\n            onChange: handleSymbolsChange,\n            boxShadow: \"0px 1px 5px rgba(0, 0, 0, 0.6)\",\n            activeBoxShadow: \"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\",\n            height: 20,\n            width: 48\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generate-password\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGeneratePasswordClick,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Generate password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"Ftl6/ggNyemqiCZaYm+x2Zkaksc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FontAwesomeIcon","faSyncAlt","faCopy","faUnlockAlt","faLock","faCheckCircle","ToastContainer","toast","Switch","tippy","axios","jsxDEV","_jsxDEV","generatePassword","length","useCapitalLetters","useDigits","useSymbols","wordSeparator","uppercaseLetters","lowercaseLetters","numbers","symbols","characterSet","generatedPassword","i","randomIndex","Math","floor","random","App","_s","password","setPassword","strength","setStrength","generateButtonRef","copyButtonRef","setLength","setUseCapitalLetters","setUseDigits","setUseSymbols","passwordType","setPasswordType","setWordSeparator","handleSeparatorChange","event","target","value","handleCapitalLettersChange","checked","handleDigitsChange","handleSymbolsChange","current","content","generateRandomPassword","handleGeneratePasswordClick","copyPassword","navigator","clipboard","writeText","success","position","POSITION","BOTTOM_RIGHT","closeOnClick","autoClose","passwordStrength","getPasswordStrength","get","then","response","wordPool","data","split","map","word","trim","isFirstWord","isLastWord","randomCase","capitalizedWord","charAt","toLowerCase","slice","toUpperCase","replace","hasLowercase","test","hasUppercase","hasNumber","hasSymbol","typesCount","filter","Boolean","className","children","fileName","_jsxFileName","lineNumber","columnNumber","icon","ref","onClick","type","id","onChange","e","htmlFor","min","max","step","newLength","parseInt","boxShadow","activeBoxShadow","height","width","_c","$RefreshReg$"],"sources":["/Users/eimantas/Desktop/password-generator/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSyncAlt, faCopy, faUnlockAlt, faLock, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Switch from 'react-switch';\nimport tippy from 'tippy.js';\nimport axios from 'axios';\nimport './tailwind.css';\nimport 'tippy.js/dist/tippy.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-toggle/style.css';\n\nfunction generatePassword(\n  length: number,\n  useCapitalLetters: boolean,\n  useDigits: boolean,\n  useSymbols: boolean,\n  wordSeparator: string\n) {\n  const uppercaseLetters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  const lowercaseLetters = 'abcdefghijklmnopqrstuvwxyz';\n  const numbers = '0123456789';\n  const symbols = '!@#$%^&*()_+<>?';\n\n  let characterSet = lowercaseLetters;\n\n  if (useCapitalLetters) {\n    characterSet += uppercaseLetters;\n  }\n\n  if (useDigits) {\n    characterSet += numbers;\n  }\n\n  if (useSymbols) {\n    characterSet += symbols;\n  }\n\n  let generatedPassword = '';\n\n  // Randomly select characters from the combined character set\n  for (let i = 0; i < length; i++) {\n    const randomIndex = Math.floor(Math.random() * characterSet.length);\n    generatedPassword += characterSet[randomIndex];\n  }\n\n  return generatedPassword;\n}\n\n\nfunction App() {\n  const [password, setPassword] = useState('');\n  const [strength, setStrength] = useState('Weak password');\n  const generateButtonRef = useRef(null);\n  const copyButtonRef = useRef(null);\n  const [length, setLength] = useState(12);\n  const [useCapitalLetters, setUseCapitalLetters] = useState(false);\n  const [useDigits, setUseDigits] = useState(false);\n  const [useSymbols, setUseSymbols] = useState(false);\n  const [passwordType, setPasswordType] = useState('characters');\n  const [wordSeparator, setWordSeparator] = useState('-');\n\n  const handleSeparatorChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setWordSeparator(event.target.value);\n  };\n\n  const handleCapitalLettersChange = (checked: boolean) => {\n    setUseCapitalLetters(checked);\n  };\n\n  const handleDigitsChange = (checked: boolean) => {\n    setUseDigits(checked);\n  };\n\n  const handleSymbolsChange = (checked: boolean) => {\n    setUseSymbols(checked);\n  };\n\n  useEffect(() => {\n    if (passwordType === 'characters') {\n      if (length > 60) {\n        setLength(60);\n        generatePassword(60, useCapitalLetters, useDigits, useSymbols, wordSeparator);\n      }\n    } else if (passwordType === 'words') {\n      if (length > 10) {\n        setLength(10);\n        generatePassword(10, useCapitalLetters, useDigits, useSymbols, wordSeparator);\n      }\n    }\n  }, [passwordType, length, useCapitalLetters, useDigits, useSymbols, wordSeparator]);  \n\n  useEffect(() => {\n    if (generateButtonRef.current) {\n      tippy(generateButtonRef.current, {\n        content: 'Generate password',\n      });\n    }\n    if (copyButtonRef.current) {\n      tippy(copyButtonRef.current, {\n        content: 'Copy password',\n      });\n    }\n  }, []);\n  \n  useEffect(() => {\n    // Generate initial password when page loads for the first time\n    generateRandomPassword();\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    // Regenerate password whenever any of the options changes\n    generateRandomPassword();\n    // eslint-disable-next-line\n  }, [passwordType, length, useCapitalLetters, useDigits, useSymbols, wordSeparator]);  \n\n  function handleGeneratePasswordClick() {\n    generateRandomPassword();\n  }\n\n  function copyPassword() {\n    if (navigator.clipboard) {\n      navigator.clipboard.writeText(password);\n      toast.success('Password copied!', {\n        position: toast.POSITION.BOTTOM_RIGHT,\n        closeOnClick: true,\n        autoClose: 2000,\n      });\n    }\n  }\n\n  const generateRandomPassword = () => {\n    let generatedPassword = '';\n    let passwordStrength = '';\n  \n    if (passwordType === 'characters') {\n      generatedPassword = generatePassword(\n        length,\n        useCapitalLetters,\n        useDigits,\n        useSymbols,\n        wordSeparator\n      );\n  \n      passwordStrength = getPasswordStrength(generatedPassword);\n      setPassword(generatedPassword);\n      setStrength(passwordStrength);\n    } else if (passwordType === 'words') {\n      // Pull random english words using axios\n      axios\n        .get('https://raw.githubusercontent.com/first20hours/google-10000-english/master/google-10000-english.txt')\n        .then(response => {\n          const wordPool: string[] = response.data.split('\\n').map((word: string) => word.trim());\n  \n          for (let i = 0; i < length; i++) {\n            const randomIndex = Math.floor(Math.random() * wordPool.length);\n            let word = wordPool[randomIndex];\n            const isFirstWord = i === 0;\n            const isLastWord = i === length - 1;\n  \n            if (useCapitalLetters && !isFirstWord && !isLastWord) {\n              const randomCase = Math.random() < 0.5 ? 'lower' : 'upper';\n              const capitalizedWord =\n                randomCase === 'lower'\n                  ? word.charAt(0).toLowerCase() + word.slice(1)\n                  : word.charAt(0).toUpperCase() + word.slice(1);\n              word = capitalizedWord;\n            }\n  \n            if (useSymbols) {\n              word = word.replace(/a/gi, '4');\n              word = word.replace(/e/gi, '3');\n              word = word.replace(/l/gi, '1');\n              word = word.replace(/o/gi, '0');\n              word = word.replace(/s/gi, '5');\n              word = word.replace(/t/gi, '7');\n            }\n  \n            generatedPassword += word;\n  \n            if (!isLastWord) {\n              generatedPassword += wordSeparator;\n            }\n          }\n  \n          passwordStrength = getPasswordStrength(generatedPassword);\n          setPassword(generatedPassword);\n          setStrength(passwordStrength);\n        })\n    }\n  }  \n\n  function getPasswordStrength(password: string) {\n    const hasLowercase = /[a-z]/.test(password);\n    const hasUppercase = /[A-Z]/.test(password);\n    const hasNumber = /[0-9]/.test(password);\n    const hasSymbol = /[^A-Za-z0-9]/.test(password);\n    const length = password.length;\n  \n    // Count how many types of characters are present\n    const typesCount = [hasLowercase, hasUppercase, hasNumber, hasSymbol].filter(Boolean).length;\n\n    // Strong password if: 4 types of characters and length >= 8, or 3 types with length > 12, or 2 types with length > 20 or any type with length > 50\n    if ((typesCount === 4 && length >= 8) || (typesCount >= 3 && length > 12) || (typesCount >= 2 && length > 20) || length > 50) {\n      return 'Strong password';\n    }\n\n    // Moderate password if: 3 types of characters and length >= 8, or 2 types and length >= 12, or any type with length > 12\n    if ((typesCount === 3 && length >= 8) || (typesCount === 2 && length >= 12) || length > 12) {\n      return 'Moderate password';\n    }\n  \n    // Weak password if: all other passwords\n    return 'Weak password';\n  }\n  \n  return (\n  <div className=\"App\">\n    <ToastContainer/>\n    <header className=\"App-header\">\n      <h1>Password generator</h1>\n    </header>\n    \n    <div className=\"App-password\">\n      <p>{password}</p>\n    </div>\n    \n    <p className={`password-strength ${strength === 'Weak password' ? 'red' : strength === 'Strong password' ? 'green' : 'orange'}`}>\n    {strength === 'Weak password' ? <FontAwesomeIcon icon={faUnlockAlt} className=\"icon\" /> : strength === 'Strong password' ? <FontAwesomeIcon icon={faLock} className=\"icon\"/> : <FontAwesomeIcon icon={faCheckCircle} className=\"icon\" />}\n    {strength}\n    </p>\n    \n    <div className=\"button-container\">\n      <div className=\"generate-button\">\n        <button ref={generateButtonRef} onClick={handleGeneratePasswordClick}>\n          <FontAwesomeIcon icon={faSyncAlt} />\n        </button>\n      </div>\n      \n      <div className=\"copy-button\">\n        <button ref={copyButtonRef} onClick={copyPassword}>\n          <FontAwesomeIcon icon={faCopy} />\n        </button>\n      </div>\n    </div>\n    \n    <div className=\"App-options\">\n      <div className=\"option\">\n        <p>Type</p>\n        <div className=\"toggle\">\n          <input\n            type=\"radio\"\n            id=\"charactersRadio\"\n            value=\"characters\"\n            checked={passwordType === 'characters'}\n            onChange={(e) => setPasswordType(e.target.value)}\n            className=\"hidden\"\n          />\n          <label\n            htmlFor=\"charactersRadio\"\n            className={`bg-gray-200 rounded-full px-4 py-2 mr-2 cursor-pointer ${\n              passwordType === 'characters' ? 'bg-blue-500 text-white' : ''\n            }`}\n          >\n            Characters\n          </label>\n        </div>\n        \n        <div className=\"toggle\">\n          <input\n            type=\"radio\"\n            id=\"wordsRadio\"\n            value=\"words\"\n            checked={passwordType === 'words'}\n            onChange={(e) => setPasswordType(e.target.value)}\n            className=\"hidden\"\n          />\n          <label\n            htmlFor=\"wordsRadio\"\n            className={`bg-gray-200 rounded-full px-4 py-2 cursor-pointer ${\n              passwordType === 'words' ? 'bg-blue-500 text-white' : ''\n            }`}\n          >\n            Words\n          </label>\n        </div>\n      </div>\n\n      {passwordType === 'characters' && (\n        <div className=\"option\">\n          <p>Length</p>\n          <div className=\"slider\">\n            <input \n              type=\"range\" \n              min=\"8\" \n              max=\"60\" \n              step=\"1\" \n              value={length}\n              onChange={(event) => {\n                const newLength = parseInt(event.target.value);\n                setLength(newLength);\n                generatePassword(newLength, useCapitalLetters, useDigits, useSymbols, wordSeparator);\n              }}\n            />\n            <span className=\"selected-length\">{length}</span>\n          </div>\n        </div>\n      )}\n\n      {passwordType === 'words' && (\n        <div className=\"option\">\n          <p>Words</p>\n          <div className=\"slider\">\n            <input \n              type=\"range\" \n              min=\"3\" \n              max=\"10\" \n              step=\"1\" \n              value={length}\n              onChange={(event) => {\n                const newLength = parseInt(event.target.value);\n                setLength(newLength);\n                generatePassword(newLength, useCapitalLetters, useDigits, useSymbols, wordSeparator);\n              }}\n            />\n            <span className=\"selected-length\">{length}</span>\n          </div>\n        </div>\n      )}\n\n      {passwordType === 'characters' && (\n      <div className=\"option\">\n        <p>Use capital letters (A-Z)</p>\n        <div className=\"toggle\">\n          <Switch\n            checked={useCapitalLetters}\n            onChange={handleCapitalLettersChange}\n            boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n            activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n            height={20}\n            width={48}\n          />\n        </div>\n      </div>\n      )}\n\n    {passwordType === 'words' && (\n      <div className=\"option\">\n        <p>Separate words with</p>\n        <div className=\"dropdown\">\n          <select\n            value={wordSeparator}\n            onChange={handleSeparatorChange}\n            className=\"dropdown-select\"\n          >\n            <option value=\"_\">Underscore</option>\n            <option value=\"-\">Hyphen</option>\n            <option value=\" \">Space</option>\n            <option value=\",\">Comma</option>\n            <option value=\".\">Period</option>\n          </select>\n        </div>\n      </div>\n    )}\n\n      {passwordType === 'characters' && (\n      <div className=\"option\">\n        <p>Use digits (0-9)</p>\n        <div className=\"toggle\">\n          <Switch \n            checked={useDigits} \n            onChange={handleDigitsChange} \n            boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n            activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n            height={20}\n            width={48}\n          />\n        </div>\n      </div>\n      )}\n\n      {passwordType === 'words' && (\n      <div className=\"option\">\n        <p>Use capital letters (A-Z)</p>\n        <div className=\"toggle\">\n          <Switch\n            checked={useCapitalLetters}\n            onChange={handleCapitalLettersChange}\n            boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n            activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n            height={20}\n            width={48}\n          />\n        </div>\n      </div>\n      )}\n\n      {passwordType === 'characters' && (\n      <div className=\"option\">\n        <p>Use symbols (@!$%&*)</p>\n        <div className=\"toggle\">\n          <Switch \n            checked={useSymbols} \n            onChange={handleSymbolsChange} \n            boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n            activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n            height={20}\n            width={48}\n          />\n        </div>\n      </div>\n      )}\n\n      {passwordType === 'words' && (\n      <div className=\"option\">\n        <p>Use digits (e.g. replace A with 4)</p>\n        <div className=\"toggle\">\n          <Switch \n            checked={useSymbols} \n            onChange={handleSymbolsChange} \n            boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n            activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n            height={20}\n            width={48}\n          />\n        </div>\n      </div>\n      )}\n\n      <div className=\"generate-password\">\n        <button onClick={handleGeneratePasswordClick}>\n            <p>Generate password</p>\n        </button>\n      </div>\n\n    </div>\n  </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}